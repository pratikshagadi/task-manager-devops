{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState([]);const[title,setTitle]=useState(\"\");useEffect(()=>{fetch(\"http://localhost:5000/tasks\").then(res=>res.json()).then(data=>setTasks(data));},[]);const addTask=async()=>{const res=await fetch(\"http://localhost:5000/tasks\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({title,completed:false})});setTasks([...tasks,await res.json()]);setTitle(\"\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Manager\"}),/*#__PURE__*/_jsx(\"input\",{value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"Add Task\"}),/*#__PURE__*/_jsx(\"ul\",{children:tasks.map(t=>/*#__PURE__*/_jsxs(\"li\",{children:[t.title,\" \",t.completed?\"✅\":\"❌\"]},t._id))})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","title","setTitle","fetch","then","res","json","data","addTask","method","headers","body","JSON","stringify","completed","children","value","onChange","e","target","onClick","map","t","_id"],"sources":["C:/Users/Asus/OneDrive/Documents/task-manager-devops/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/tasks\")\n      .then(res => res.json())\n      .then(data => setTasks(data));\n  }, []);\n\n  const addTask = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ title, completed: false })\n    });\n    setTasks([...tasks, await res.json()]);\n    setTitle(\"\");\n  };\n\n  return (\n    <div>\n      <h1>Task Manager</h1>\n      <input value={title} onChange={(e) => setTitle(e.target.value)} />\n      <button onClick={addTask}>Add Task</button>\n      <ul>\n        {tasks.map(t => (\n          <li key={t._id}>{t.title} {t.completed ? \"✅\" : \"❌\"}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACdW,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CACjC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAAH,GAAG,CAAG,KAAM,CAAAF,KAAK,CAAC,6BAA6B,CAAE,CACrDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEZ,KAAK,CAAEa,SAAS,CAAE,KAAM,CAAC,CAClD,CAAC,CAAC,CACFd,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAE,KAAM,CAAAM,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CACtCJ,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,mBACEL,KAAA,QAAAkB,QAAA,eACEpB,IAAA,OAAAoB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBpB,IAAA,UAAOqB,KAAK,CAAEf,KAAM,CAACgB,QAAQ,CAAGC,CAAC,EAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,cAClErB,IAAA,WAAQyB,OAAO,CAAEZ,OAAQ,CAAAO,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC3CpB,IAAA,OAAAoB,QAAA,CACGhB,KAAK,CAACsB,GAAG,CAACC,CAAC,eACVzB,KAAA,OAAAkB,QAAA,EAAiBO,CAAC,CAACrB,KAAK,CAAC,GAAC,CAACqB,CAAC,CAACR,SAAS,CAAG,GAAG,CAAG,GAAG,GAAzCQ,CAAC,CAACC,GAA4C,CACxD,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAAzB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}